wine-staging (Wine Staging is the testing area of winehq.org)

It contains bug fixes and features, which have not been integrated
into the development branch yet. The idea of Wine Staging is to
provide experimental features faster to end users and to give
developers the possibility to discuss and improve their patches
before they are integrated into the main branch.

This is a current development branch of Wine appended with full
patches of the Staging branch.


MULTILIB.

With no options this script will build the 32bit wine-staging
package ONLY!, for which you need to have a FULL multilib
system installed (see below).

To build a package for both 64bit and 32bit Windows executable
support, use this:

# WIN64=yes sh wine-staging.SlackBuild

See README.SLACKWARE for a giant list of dependencies and
AlienBOB's multilib readme and repo:

https://docs.slackware.com/slackware:multilib
http://www.slackware.com/~alien/multilib/

From wine's maintainer David Woodfall you can grab a script
to get and install the multilib packages:

http://dawoodfall.net/files/scripts/slackware/alien-multilib-rysnc.sh

Be sure to read the short instructions at the top. If you use
slackpkg then you will also want to blacklist his packages in
/etc/slackpkg/blacklist:

[0-9]+alien
[0-9]+compat32


WINEPREFIX.

With 64bit support you would use the wine64 binary. If you have a
combined 32 and 64bit package you need to set the environmental
variable WINEPREFIX to point to the 64bit wine directory when running
wine64, which should be different to the 32bit directory (~/.wine by
default). Example:

$ WINEPREFIX=~/.wine64 wine64 notepad

To build the 32bit wine on x86_64 you will need to have multilib
packages installed, unless you want to build for Windows 64 bit
applications only using:

# WIN64=yes NOWIN32=yes sh wine-staging.SlackBuild


OPENGL.

To disable OpenGL support, use:

# OPENGL=no ./wine.SlackBuild

Optional dependencies: fontforge, webcore-fonts, winetricks
