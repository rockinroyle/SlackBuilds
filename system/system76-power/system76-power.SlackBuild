#!/bin/sh

# Slackware build script for system76-power

# Copyright 2019 Erich Ritz, Scottsdale, Arizona, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=system76-power
VERSION=${VERSION:-1.0.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac

  if [ "$ARCH" = "i586" ]; then
    if rustc -Vv | grep host | grep i686 > /dev/null ; then
      ARCH=i686
    fi
  fi
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
if [ -e $CWD/$VERSION.tar.gz ]; then
  tar xvf $CWD/$VERSION.tar.gz
else
  tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
fi
cd $PRGNAM-$VERSION

# build offline
# configuration tells cargo to use the configured directory
# for dependencies intead of downloading from crates.io
mkdir .cargo
cat << EOF >> .cargo/config
[source.crates-io]
replace-with = "vendored-sources"

[source."https://github.com/pop-os/sysfs-class"]
git = "https://github.com/pop-os/sysfs-class"
branch = "master"
replace-with = "vendored-sources"

[source.vendored-sources]
directory = "$(pwd)/vendor"
EOF

mkdir vendor
# deps and versions come from Cargo.lock
(
  cd vendor

  for dependency in ansi_term=0.11.0 \
                    atty=0.2.11 \
                    bitflags=0.7.0 \
                    bitflags=1.0.4 \
                    cfg-if=0.1.7 \
                    clap=2.33.0 \
                    dbus=0.6.2 \
                    err-derive=0.1.5 \
                    fern=0.5.8 \
                    intel-pstate=0.2.0 \
                    libc=0.2.54 \
                    libdbus-sys=0.1.5 \
                    log=0.4.6 \
                    numtoa=0.1.0 \
                    numtoa=0.2.3 \
                    pkg-config=0.3.14 \
                    proc-macro2=0.4.30 \
                    quote=0.6.12 \
                    redox_syscall=0.1.54 \
                    redox_termios=0.1.1 \
                    rustc_version=0.2.3 \
                    semver=0.9.0 \
                    semver-parser=0.7.0 \
                    smart-default=0.5.2 \
                    strsim=0.8.0 \
                    syn=0.15.34 \
                    synstructure=0.10.1 \
                    sysfs-class=0.1.1=7bc914e0ac41df18a671ede0691fcd7d1f7e8add \
                    termion=1.5.2 \
                    textwrap=0.11.0 \
                    time=0.1.42 \
                    unicode-width=0.1.5 \
                    unicode-xid=0.1.0 \
                    vec_map=0.8.1 \
                    vergen=0.1.1 \
                    winapi=0.3.7 \
                    winapi-i686-pc-windows-gnu=0.4.0 \
                    winapi-x86_64-pc-windows-gnu=0.4.0; do
    dep="$(echo "$dependency" | cut -d= -f1)"
    ver="$(echo "$dependency" | cut -d= -f2)"

    if [ -e $CWD/$dep-$ver.crate ]; then
        CRATE_FILE=$CWD/$dep-$ver.crate
    else
        id="$(echo "$dependency" | cut -d= -f3)"
        if [ -e $CWD/$id.tar.gz ]; then
            CRATE_FILE=$CWD/$id.tar.gz
        else
            CRATE_FILE=$CWD/sysfs-class-$id.tar.gz
        fi
	ver=$id
    fi
    tar xvf $CRATE_FILE

    touch $dep-$ver/.cargo-ok

    # generate checksum
    {
      printf "{\n"
      printf '    "files": {\n'

      (
        cd $dep-$ver
        find . -type f -print0 | xargs -0 sha256sum | sed -n '/\.cargo-checksum\.json/!p' | sed 's/\.\///;s/^\([^ ]*\)[[:space:]][[:space:]]*\(.*\)$/"\2":"\1",/'
      ) | sed '$ s/,$//'

      printf "    },\n"
      printf '    "package": "'

      sha256sum "$CRATE_FILE" | cut -f1 -d' ' | sed 's/$/"/'

      printf "}\n"
    } | python -c "import sys, json; data = sys.stdin.read(); print json.dumps(json.loads(data), sort_keys=True, indent=4, separators=(',', ' : '))" > $dep-$ver/.cargo-checksum.json
    # Change selected package checksums to null
    if [ "$dep" == "sysfs-class" ] ; then
        sed -i 's/"package" : ".\{64\}"/"package" : null/' $dep-$ver/.cargo-checksum.json
    fi
  done
)

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
libdir=/usr/lib${LIBDIRSUFFIX} \
make
make install DESTDIR=$PKG

# Remove suid bit on system76-power executable
# Despite being installed SUID by the Makefile, the Debian package installed
# on Pop!_OS has 0755 permissions for this file, so follow that convention.
chmod u-s $PKG/usr/bin/system76-power

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/etc/logrotate.d $PKG/etc/rc.d
install -m 0644 $CWD/config/system76-power.logrotate $PKG/etc/logrotate.d/system76-power.new
install -m 0644 $CWD/config/rc.system76-power $PKG/etc/rc.d/rc.system76-power.new

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
