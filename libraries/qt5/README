Qt is a cross-platform C++ application framework.  Qt's
primary feature is its rich set of widgets that provide
standard GUI functionality.

The following are optional dependencies that Qt will link
against if they are detected at build time:

libwebp opus pcre2 snappy

============================================================

OPTIONS

To use Qt's built-in ccache option:

  CCACHE=yes ./qt5.SlackBuild

See README.benchmarks for the benefits of using ccache.

To build the documentation:

  DOCS=yes ./qt5.SlackBuild

To build the examples:

  EXAMPLES=yes ./qt5.SlackBuild

To build support for proprietary media codecs:

  PROPRIETARY_CODECS=yes ./qt5.SlackBuild

(this will produce a non-redistributable package in some
countries)

To disable support for pulseaudio:

  PULSEAUDIO=no ./qt5.SlackBuild

(Qt will automatically detect if pulseaudio is not installed
at build time and disable it if it is missing.)

To NOT build qtwebengine (EXPERIMENTAL):

  WEBENGINE=no ./qt5.SlackBuild


Combine any or all of the above.

============================================================

GENERAL NOTES

After upgrading Qt5 it is important to rebuild qt5ct too, if
it is installed, or some applications may not display or
function correctly.

There is a qt5-legacy (5.7.1) SlackBuild that is available
for older applications that do not run correctly with this
version.  However it will not coexist with this version.

Please report any problems about applications that don't
work correctly to the Qt5 maintainer or to the mailing list.

============================================================

ROUGH SPEED & SIZE GUIDE

  OPTION                                 PKG  SPACE TIME
  Normal:                                102M 5018M 9:55
  No Webengine:                          50M  1895M 3:18
  With Documentation:                    339M 6197M -
  With Examples:                         391M 6388M -
  With Documentation and Examples:       628M 7604M -

  PKG:   Package size.
  SPACE: Package directory + source space needed.
  TIME:  Rough build time (- = unknown.)

See README.benchmarks for more detailed information.
See README.ccache for information on setting up ccache.

============================================================

NOTES ON OPTIONS

* Using ccache should speed up subsequent rebuilds, but may
  be slower for first time or one-off builds.

* Building the documentation and/or examples creates a
  significantly larger package.

* Successfully tested so far without webengine (VERY quick
  tests):

  QMPlay2
  qt5ct
  qbittorrent-qt5
  speedcrunch
  qca-qt5
  psi-plus
  sddm

============================================================

BUILDING WITHOUT WEBENGINE

See README.benchmarks for the benefits of not building
webengine.

YMMV whether it works with an application or not, but if you
have no intention of using the browser code, which includes
a chunk of 3rd party Google Chromium source, then it may
make sense to skip it and save yourself about 2/3 of the
build time.

The package version has _nowebengine appended to it for
clarity.
