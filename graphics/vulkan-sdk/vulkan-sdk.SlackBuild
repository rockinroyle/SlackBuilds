#!/bin/sh

# Slackware build script for vulkan-sdk

# Copyright 2016, 2017  Heinz Wiesinger, Amsterdam, The Netherlands
# Copyright 2016, 2017, 2018  Patrick J. Volkerding, Sebeka, MN, USA
# Copyright 2019 Hunter Sezen California, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=vulkan-sdk
VERSION=${VERSION:-1.1.121.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
SRC=$TMP/$PRGNAM-$VERSION
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -eu

chdir () { cd -- "$SRC/$1"; printf %s\\n '' "Building $1" ''; }

cmake_build () {
  mkdir -p build
  cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=lib$LIBDIRSUFFIX \
    -DCMAKE_BUILD_TYPE=Release \
    "${@:-}" ..
  make
  make install DESTDIR=$PKG
}

# Vulkan-ValidationLayers requires git versions
# listed in the known_good.json file to build.
# https://github.com/KhronosGroup/Vulkan-ValidationLayers/issues/1082
GLSLANG_VERSION=${GLSLANG_VERSION:-34953810a62c5230cc059cfdf42dc44c5aab2246}
SPIRV_HEADERS_VERSION=${SPIRV_HEADERS_VERSION:-38cafab379e5d16137cb97a485b9385191039b92}
SPIRV_TOOLS_VERSION=${SPIRV_TOOLS_VERSION:-9b3cc3e05337358d0bd9fec1b7a51e3cbf55312b}

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
mkdir $PRGNAM-$VERSION
cd $PRGNAM-$VERSION

(
  tar xvf $CWD/glslang-$GLSLANG_VERSION.tar.gz
  cd glslang-$GLSLANG_VERSION/External
  tar xvf $CWD/SPIRV-Tools-$SPIRV_TOOLS_VERSION.tar.gz
  mv SPIRV-Tools-$SPIRV_TOOLS_VERSION spirv-tools
  cd spirv-tools/external
  tar xvf $CWD/SPIRV-Headers-$SPIRV_HEADERS_VERSION.tar.gz
  mv SPIRV-Headers-$SPIRV_HEADERS_VERSION spirv-headers
)

tar xvf $CWD/Vulkan-Headers-sdk-$VERSION.tar.gz
tar xvf $CWD/Vulkan-Loader-sdk-$VERSION.tar.gz
tar xvf $CWD/Vulkan-ValidationLayers-sdk-$VERSION.tar.gz
tar xvf $CWD/Vulkan-Tools-sdk-$VERSION.tar.gz

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

chdir glslang-$GLSLANG_VERSION

cmake_build \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_SKIP_RPATH=TRUE

chdir Vulkan-Headers-sdk-$VERSION

# Require an older cmake version.
sed -i 's/3.10.2/3.5.2/' CMakeLists.txt

cmake_build

chdir Vulkan-Loader-sdk-$VERSION

# Require an older cmake version.
sed -i 's/3.10.2/3.5.2/' CMakeLists.txt

cmake_build \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_SKIP_RPATH=TRUE \
  -DBUILD_TESTS=OFF \
  -DBUILD_WSI_WAYLAND_SUPPORT=OFF \
  -DVULKAN_HEADERS_INSTALL_DIR=$PKG/usr

chdir Vulkan-ValidationLayers-sdk-$VERSION

# Require an older cmake version.
sed -i 's/3.10.2/3.5.2/' CMakeLists.txt

# Disable hardcoded errors
sed -i '/-Werror/d' CMakeLists.txt

# Fix build with gcc5.
# https://github.com/KhronosGroup/Vulkan-ValidationLayers/pull/1240
# https://github.com/KhronosGroup/Vulkan-ValidationLayers/commit/80ddc06b39dd1164733b69b68231b497f51840ad
patch -p1 < $CWD/cmath.patch

cmake_build \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_INSTALL_DATADIR=share \
  -DCMAKE_SKIP_RPATH=TRUE \
  -DBUILD_TESTS=OFF \
  -DBUILD_WSI_XLIB_SUPPORT=ON \
  -DBUILD_WSI_XCB_SUPPORT=ON \
  -DBUILD_WSI_WAYLAND_SUPPORT=OFF \
  -DGLSLANG_INSTALL_DIR=$PKG/usr \
  -DVULKAN_HEADERS_INSTALL_DIR=$PKG/usr

chdir Vulkan-Tools-sdk-$VERSION

# Require an older cmake version.
sed -i 's/3.10.2/3.5.2/' CMakeLists.txt

cmake_build \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_SKIP_RPATH=TRUE \
  -DBUILD_WSI_WAYLAND_SUPPORT=OFF \
  -DVULKAN_HEADERS_INSTALL_DIR=$PKG/usr \
  -DVULKAN_LOADER_INSTALL_DIR=$PKG/usr \
  -DGLSLANG_INSTALL_DIR=$PKG/usr

cd -- "$SRC"

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" |
  grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a Vulkan-Loader-sdk-$VERSION/*.txt \
  Vulkan-Loader-sdk-$VERSION/loader/LoaderAndLayerInterface.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
